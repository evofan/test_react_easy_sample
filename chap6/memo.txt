コンポネント
コンポーネントはReactの基本単位で、Reactではコンポーネント組み合わせて画面を作っていく

□□6-1 新規プロジェクト作成
じゃんけんアプリを作成するためにプロジェクトファイルをコピー


□□6-2 最初のコード
chap6/jyanken
に記載


□□6-3 コンポーネントの作り方
Reactのコンポーネントには
1.Componentを継承したクラスコンポーネント（色々な機能）→ジャンケンで使用
2.関数のコンポーネント（単にJSXを返す）
の2つがある
JyankenPageクラスでは、Componentを継承してrender()を実装してJSXを表示している


□□6-4 PropsとState
JyankenPageコンポーネントから、ScoreBoxコンポーネントにscoreというパラメーターを渡している
このパラメーターの事を「Props」と呼ぶ

子？コンポーネントは通常受け取ったPropsの値に応じたHTMLを組み立てる
子？コンポーネント側で値を変更してはいけない

また、子？コンポーネント側でデータを持ちたい場合は、「State」に保存する
ジャンケンアプリでは、人間の押したジャンケンの手、コンピューターの乱数で作った手、をStateに持たせている

StateではReactでは、this.stateというインスタンス変数に格納されている
this.stateはオブジェクトで、コンポーネントの持つ全てのパラメーターや状態が入っている
自分でデータを持たせる場合は判り易いキー名をつける

Stateの値はthis.stateを直接参照するが、代入（更新）はthis.setState()メソッドで行う
（Reactがビューの表示更新処理をするので）

また、this.setState()メソッドをrender()内で使用すると無限呼び出しになるので注意する

JyankenPageクラスの説明
※コード側に記載


□□6-5 ライフサイクル・メソッド
JyankenPageクラスのrender()はどこからも呼ばれていないが、いつ使われているのか？

Reactライブラリが自動で呼び出している
・JSアプリがブラウザにロードされた直後、例：componentDidMount()
・コンポーネントのProps（パラメーター）が変更された時、例：componentWillRecieveProps()
・コンポーネント内でsetState()が実行され、Stateが変更された時

これらのメソッドはサーバーとのデータ通信等に使われる
例：※コード内に記述

□□6-6 イベントの扱い
Reactでは、テキストフィールドへの文字入力や、ボタンを押した等のイベントは、
JSのonClickやonChangeをそのまま使う
例：※コード内に記述


□□6-7 フォーム
Reactには、フォーム要素の扱い方には2つの方法がある

■Controlled Components ... Reactのイベント種類を使い、プログラムで入力を管理する
・INPUTタグのonChange属性を使い、入力されたデータを取得する
・入力された値は基本的にStateに保存する
・INPUTタグのvalue属性はStateの値を設定する
例：※小遣い帳のコード内に記述
メリット：
・ツイッターのような文字数制限のある入力で、タイプ時に文字数がチェック出来る
・英数字のみ入力可能なフィールドで、それ以外の入力時に警告を出せる
・ラジオボタンやチェックボックスで、チェックした瞬間に表示を切り替えられる

■Uncontrolled Components ... 入力の処理はブラウザに任せ、値は必要になった時点で取得
・値を取得する必要のあるタグにref属性を設定し、タグをアクセスするためのインスタンス変数に設定する
・値を取得するには↑で設定したインスタンス変数にアクセスして取得する
例：※小遣い帳のコード内に記述
メリット：
・コードがシンプルになる（但しリアルタイム処理は出来ない）

■その他のフォーム要素
・テキストエリア ... Reactではテキストフィールドとほぼ同じように使える
<div>項目：<textarea value={this.state.item} name={item} onChange={(e) => this.onChangeValue(e) } placeholder="おこづかい" /></div>

・セレクトボックス
<select value={this.state.payingIn ? "on" : "off"} onChange={(e) => this.onChangePayingIn(e) } />
<option value="on">入金</option>
<option value="off">出金</option>
</select>

・複数選択出来るセレクトボックス


<option value="on">入金</option>


□□6-8 詳細なライフサイクル・メソッド
