コンポネント
コンポーネントはReactの基本単位で、Reactではコンポーネント組み合わせて画面を作っていく

□□6-1 新規プロジェクト作成
じゃんけんアプリを作成するためにプロジェクトファイルをコピー


□□6-2 最初のコード
chap6/jyanken
に記載


□□6-3 コンポーネントの作り方
Reactのコンポーネントには
1.Componentを継承したクラスコンポーネント（色々な機能）→ジャンケンで使用
2.関数のコンポーネント（単にJSXを返す）
の2つがある
JyankenPageクラスでは、Componentを継承してrender()を実装してJSXを表示している


□□6-4 PropsとState
JyankenPageコンポーネントから、ScoreBoxコンポーネントにscoreというパラメーターを渡している
このパラメーターの事を「Props」と呼ぶ

子？コンポーネントは通常受け取ったPropsの値に応じたHTMLを組み立てる
子？コンポーネント側で値を変更してはいけない

また、子？コンポーネント側でデータを持ちたい場合は、「State」に保存する
ジャンケンアプリでは、人間の押したジャンケンの手、コンピューターの乱数で作った手、をStateに持たせている

StateではReactでは、this.stateというインスタンス変数に格納されている
this.stateはオブジェクトで、コンポーネントの持つ全てのパラメーターや状態が入っている
自分でデータを持たせる場合は判り易いキー名をつける

Stateの値はthis.stateを直接参照するが、代入（更新）はthis.setState()メソッドで行う
（Reactがビューの表示更新処理をするので）

また、this.setState()メソッドをrender()内で使用すると無限呼び出しになるので注意する

JyankenPageクラスの説明
※コード側に記載


□□6-5 ライフサイクル・メソッド
JyankenPageクラスのrender()はどこからも呼ばれていないが、いつ使われているのか？


□□6-6 イベントの扱い



□□6-7 フォーム



□□6-8 詳細なライフサイクル・メソッド

